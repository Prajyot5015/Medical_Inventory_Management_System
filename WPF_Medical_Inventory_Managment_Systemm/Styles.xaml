<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- MODERN COLOR DEFINITIONS -->
    <Color x:Key="PrimaryRed">#FF6B6B</Color>
    <Color x:Key="PrimaryYellow">#FFD93D</Color>
    <Color x:Key="PrimaryGreen">#6BCB77</Color>
    <Color x:Key="PrimaryBlue">#4D96FF</Color>
    <Color x:Key="DarkBlue">#004E8C</Color>
    <Color x:Key="DarkGray">#323130</Color>
    <Color x:Key="MediumGray">#8A8886</Color>
    <Color x:Key="LightGray">#F3F2F1</Color>
    <Color x:Key="White">#FFFFFF</Color>
    <Color x:Key="LightCyan">#B8E3E9</Color>
    <Color x:Key="TealColor">#B8E3E9</Color>

    <Color x:Key="DarkTeal">#4F7C82</Color>
    <Color x:Key="SoftCoral">#FF9E7D</Color>

    <!-- BRUSH CONVERSIONS -->
    <SolidColorBrush x:Key="PrimaryRedBrush" Color="{StaticResource PrimaryRed}"/>
    <SolidColorBrush x:Key="PrimaryYellowBrush" Color="{StaticResource PrimaryYellow}"/>
    <SolidColorBrush x:Key="PrimaryGreenBrush" Color="{StaticResource PrimaryGreen}"/>
    <SolidColorBrush x:Key="PrimaryBlueBrush" Color="{StaticResource PrimaryBlue}"/>
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlue}"/>
    <SolidColorBrush x:Key="DarkGrayBrush" Color="{StaticResource DarkGray}"/>
    <SolidColorBrush x:Key="MediumGrayBrush" Color="{StaticResource MediumGray}"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGray}"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}"/>
    <SolidColorBrush x:Key="LightCyanBrush" Color="{StaticResource LightCyan}"/>
    <SolidColorBrush x:Key="TealBrush" Color="{StaticResource TealColor}"/>

    <SolidColorBrush x:Key="DarkTealBrush" Color="{StaticResource DarkTeal}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource SoftCoral}"/>


    <!-- SIDEBAR STYLES -->
    <Style x:Key="NavButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="15,12"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MediumGrayBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MediumGrayBrush}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- BASE BUTTON STYLE -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Margin" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- BUTTON VARIANTS -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryBlueBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryGreenBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5AB56B"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryYellowBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E6C337"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryRedBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E05A5A"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DATAGRID STYLES -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource LightGrayBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource LightGrayBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource LightGrayBrush}"/>
    </Style>

    <!--column header -->
    
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#F8DAD0"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
    </Style>

    <!--column cell-->
    
    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TEXT STYLES -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- CARD STYLE -->
    <Style x:Key="InventoryCard" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="12" 
                             ShadowDepth="1" 
                             Opacity="0.1"
                             Color="{StaticResource DarkGray}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TEXTBOX STYLE -->
    <Style x:Key="MaterialTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Padding" Value="0,8,0,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Add this to your Styles.xaml or ResourceDictionary -->
    <Style x:Key="DataGridRowHover" TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource LightGray}"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Neutral style button-->
    <Style x:Key="NeutralButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MediumGrayBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D0CFCD"/>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>